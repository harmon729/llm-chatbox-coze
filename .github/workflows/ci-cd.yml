name: LLM Chat Box CI/CD

on:
  push:
    branches: [main, develop, dev]
  pull_request:
    branches: [main, develop, dev]
  release:
    types: [created]

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20.8.1"
          cache: "npm"
      - name: Install dependencies
        run: npm ci
      - name: Lint code
        run: npm run lint
      - name: Type check
        run: npm run type-check
      - name: Run unit tests
        run: npm run test:coverage
      - name: Upload coverage reports
        uses: codecov/codecov-action@v3

  build:
    needs: lint-and-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20.8.1"
          cache: "npm"
      - name: Install dependencies
        run: npm ci
      - name: Build project
        run: npm run build
      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: build-output
          path: .next/

  preview-deploy:
    if: github.event_name == 'pull_request'
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Deploy to Vercel (Preview)
        uses: amondnet/vercel-action@v20
        with:
          zeit-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          github-comment: true
          github-token: ${{ secrets.GITHUB_TOKEN }}

  production-deploy:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Deploy to Vercel (Production)
        uses: amondnet/vercel-action@v20
        with:
          zeit-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: "--prod"
          github-comment: false

  create-release:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: production-deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20.8.1"
          cache: "npm"
      - name: Install dependencies
        run: npm ci
      - name: Semantic Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npx semantic-release
      - name: Get package version
        id: package-version
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT
      - name: Create Release Bundle
        run: |
          npm run build
          mkdir -p release-bundle
          cp -r .next release-bundle/
          cp -r public release-bundle/
          cp package.json release-bundle/
          cp package-lock.json release-bundle/
          cp README.md release-bundle/
          cd release-bundle && zip -r ../llm-chatbox-v${{ steps.package-version.outputs.version }}.zip *
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.package-version.outputs.version }}
          name: Release v${{ steps.package-version.outputs.version }}
          draft: false
          prerelease: false
          files: llm-chatbox-v${{ steps.package-version.outputs.version }}.zip
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
